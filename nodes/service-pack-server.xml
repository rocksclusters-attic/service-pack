<?xml version="1.0" standalone="no"?>


<kickstart>


<description>
Service Pack Roll. When good code goes bad.
</description>


<changelog>
$Log: service-pack-server.xml,v $
Revision 1.6  2009/08/12 23:02:46  bruno
fixes for 5.2.2

Revision 1.4  2006/12/14 02:10:49  bruno
need the rocks-boot package for the 100 Mb fix

Revision 1.3  2006/10/09 20:59:23  bruno
tweaks

Revision 1.2  2006/10/06 23:35:33  bruno
install the documentation on the frontend

Revision 1.1  2006/10/06 23:33:45  bruno
first draft

</changelog>


<package>roll-service-pack-usersguide</package>

<!-- base -->
<package>rocks-sql</package>
<package>rocks-command</package>
<package>rocks-kickstart</package>

<!-- area51 -->
<eval mode="xml">
<![CDATA[
/opt/rocks/bin/rocks list roll area51 output-header=no | grep "`uname -m` yes" > /dev/null 2>&1
if [ $? -eq 0 ]
then
	echo "<package>tripwire</package>"
	echo "<package>tripwire-config</package>"
fi
]]>
</eval>

<!-- sge -->
<eval mode="xml">
<![CDATA[
/opt/rocks/bin/rocks list roll sge output-header=no | grep "`uname -m` yes" > /dev/null 2>&1
if [ $? -eq 0 ]
then
	echo "<package>sge-ganglia</package>"
fi
]]>
</eval>

<!-- xen -->
<eval mode="xml">
<![CDATA[
/opt/rocks/bin/rocks list roll xen output-header=no | grep "`uname -m` yes" > /dev/null 2>&1
if [ $? -eq 0 ]
then
	echo "<package>rocks-command-xen</package>"
fi
]]>
</eval>


<pre>

<file name="/lighttpd/conf/lighttpd-patch.conf">
<![CDATA[
server.port			= 81
server.document-root		= "/"

accesslog.filename		= "/tmp/httpd-patch.log"
server.errorlog-use-syslog	= "enable"

dir-listing.activate		= "enable"

server.modules			= (
	"mod_rewrite",
	"mod_cgi",
	"mod_accesslog"
)

index-file.names		= ( "/index.cgi" )

cgi.assign			= (
	".cgi"	=> "",
	".py"	=> ""
)

mimetype.assign			= (
	".pdf"          =>      "application/pdf",
	".sig"          =>      "application/pgp-signature",
	".spl"          =>      "application/futuresplash",
	".class"        =>      "application/octet-stream",
	".ps"           =>      "application/postscript",
	".torrent"      =>      "application/x-bittorrent",
	".dvi"          =>      "application/x-dvi",
	".gz"           =>      "application/x-gzip",
	".pac"          =>      "application/x-ns-proxy-autoconfig",
	".swf"          =>      "application/x-shockwave-flash",
	".tar.gz"       =>      "application/x-tgz",
	".tgz"          =>      "application/x-tgz",
	".tar"          =>      "application/x-tar",
	".zip"          =>      "application/zip",
	".mp3"          =>      "audio/mpeg",
	".m3u"          =>      "audio/x-mpegurl",
	".wma"          =>      "audio/x-ms-wma",
	".wax"          =>      "audio/x-ms-wax",
	".ogg"          =>      "application/ogg",
	".wav"          =>      "audio/x-wav",
	".gif"          =>      "image/gif",
	".jpg"          =>      "image/jpeg",
	".jpeg"         =>      "image/jpeg",
	".png"          =>      "image/png",
	".xbm"          =>      "image/x-xbitmap",
	".xpm"          =>      "image/x-xpixmap",
	".xwd"          =>      "image/x-xwindowdump",
	".css"          =>      "text/css",
	".html"         =>      "text/html",
	".htm"          =>      "text/html",
	".js"           =>      "text/javascript",
	".asc"          =>      "text/plain",
	".c"            =>      "text/plain",
	".cpp"          =>      "text/plain",
	".log"          =>      "text/plain",
	".conf"         =>      "text/plain",
	".text"         =>      "text/plain",
	".txt"          =>      "text/plain",
	".dtd"          =>      "text/xml",
	".xml"          =>      "text/xml",
	".mpeg"         =>      "video/mpeg",
	".mpg"          =>      "video/mpeg",
	".mov"          =>      "video/quicktime",
	".qt"           =>      "video/quicktime",
	".avi"          =>      "video/x-msvideo",
	".asf"          =>      "video/x-ms-asf",
	".asx"          =>      "video/x-ms-asf",
	".wmv"          =>      "video/x-ms-wmv",
	".bz2"          =>      "application/x-bzip",
	".tbz"          =>      "application/x-bzip-compressed-tar",
	".tar.bz2"      =>      "application/x-bzip-compressed-tar",
	""		=>	"application/octet-stream"
)
]]>
</file>

/lighttpd/sbin/lighttpd -f /lighttpd/conf/lighttpd-patch.conf

<!--
	rewrite the rolls.xml file to point the local CD/DVD downloads to
	port 81
-->
<file name="/tmp/port81.py" perms="755">
#!/opt/rocks/bin/python

file = open('/tmp/rolls.xml', 'r')
localmedia = 'url="http://127.0.0.1/mnt/cdrom'

for line in file.readlines():
	l = line.strip()

	if l[0:len(localmedia)] == localmedia:
		a = l.split('url="http://127.0.0.1')
		newurl = '\turl="http://127.0.0.1:81%s' % (a[1])
		print newurl
	else:
		print line[:-1]
	
file.close()
</file>

/tmp/port81.py > /tmp/r.xml
mv /tmp/r.xml /tmp/rolls.xml

</pre>


<!-- from the base roll -->
<post os='linux'>

<file name="/etc/logrotate.d/rocks">
/var/log/auth {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/authpriv {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/daemon {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/lpr {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/mail {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/kern {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/syslog {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/user {
	size=100M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
/var/log/local[1-9] {
	size=10M
	postrotate
		/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` \
			2&gt; /dev/null || true
	endscript
}
</file>

</post>


<post>

<!-- CentOS Team says do this to make syslog shutup -->

<file name="/etc/sysconfig/snmpd.options">
OPTIONS="-LS4d -Lf /dev/null -p /var/run/snmpd.pid"
</file>

</post>


<!-- need to reapply the configuration from the ganglia roll -->
<!--
	but the ganglia roll will append another rrds entry to fstab, so
	let's save/restore the original fstab
 -->
<post>

<file name="/tmp/finish-install-sp.sh" mode="700">
cp /etc/fstab /tmp/fstab
/opt/rocks/bin/rocks run roll ganglia | bash 2&gt; /dev/null
cp /tmp/fstab /etc/fstab
rm -f /tmp/fstab
</file>

</post>

</kickstart> 

